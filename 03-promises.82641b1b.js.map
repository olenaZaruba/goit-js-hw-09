{"mappings":"CAAa,CACXA,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAuBC,GACrBA,EAAIC,iBACJ,MAAMC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,cAAcC,SAClDC,QAAQC,IAAIN,EAAMO,OAGlBT,EAAIK,cAAcK,O","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', handlerSubmit);\n\nfunction handlerSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n  console.log(delay.value);\n\n  // createPromise(position, delay);\n  evt.currentTarget.reset();\n}\n// amount.value === '';\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     Fulfill;\n//   } else {\n//     Reject;\n//   }\n// }\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["form","document","querySelector","addEventListener","evt","preventDefault","delay","step","amount","currentTarget","elements","console","log","value","reset"],"version":3,"file":"03-promises.82641b1b.js.map"}